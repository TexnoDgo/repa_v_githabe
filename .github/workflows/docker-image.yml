name: Docker Image CI

on:
  push:
    tags:        
      - v*.*

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_key }}
  #UBUNTU_LATEST_VERSION: 

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
          
    - name: Checkout
      uses: actions/checkout@v2

    #- name: Set up QEMU
    #  uses: docker/setup-qemu-action@v1

    #- name: Set up Docker Buildx
    #  uses: docker/setup-buildx-action@v1
      
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ secrets.DOCKER_HUB_USERNAME }}/apache2-image
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


    #- name: Build and push
    #  uses: docker/build-push-action@v2
    #  with:
    #      context: .
    #      push: true
    #      tags: ${{ steps.meta.outputs.tags }}
    #      build-args: apach_user_pass=${{ secrets.APACHE_USER_PASS }}
          
    - name: Get tag
      id: get_version
      run: |
        echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
        
    - name: Get tag2
      run: |
        echo ${{ steps.get_version.outputs.VERSION }}
        last_version_ubuntu=${{ steps.get_version.outputs.VERSION }}
          
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: |
        last_version_ubuntu=${{ steps.get_version.outputs.VERSION }}
        terraform plan -var 'latest_ubuntu_version=${{last_version_ubuntu}}'

    - name: Terraform Apply
      id: apply
      run: |
        last_version_ubuntu=${{ steps.get_version.outputs.VERSION }}
        terraform apply -var 'latest_ubuntu_version=${{last_version_ubuntu}}' --auto-approve


      

          

          
      
